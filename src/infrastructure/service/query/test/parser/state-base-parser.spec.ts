import { QueryNationalBaseVo } from 'src/domain/value-object/query/query-national-base.vo';
import { StateBaseVo } from 'src/domain/value-object/state-base.vo';
import { StateBaseParser } from 'src/infrastructure/service/query/parser/state-base-parser';

const mockStateBaseVo = (): StateBaseVo => ({
  plate: 'any_plate',
  ownerName: 'any_owner_name',
  comments: 'any_comments',
  dateValidityFinancialContract: new Date(),
  intentionDocFinance: 'any_intention_doc_finance',
  licdata: new Date(),
  licensingExercise: 'any_licensing_exercise',
  ownerDocumentType: 'any_owner_document_type',
  previousOwnerName: 'any_previous_owner_name',
  previousPlate: 'any_previous_plate',
  shielding: 'any_shielding',
  taxRestrictionLimitDate: new Date(),
  tenantRestriction: 'any_tenant_restriction',
  transmissionCRVDate: new Date(),
  chassis: 'any_chassis',
  renavam: 'any_renavam',
  engineNumber: 'any_engine_number',
  transmissionNumber: 'any_transmission_number',
  bodyNumber: 'any_body_number',
  bodyType: 'any_body_type',
  rearAxisNumber: 'any_rear_axis_number',
  thireAxisNumber: 'any_thire_axis_number',
  axis: 'any_axis',
  enginePower: 'any_engine_power',
  modelYear: 2022,
  manufactureYear: 2021,
  vehicleSpecie: 'any_vehicle_specie',
  vehicleType: 'any_vehicle_type',
  vehicleSituation: 'any_vehicle_situation',
  city: 'any_city',
  uf: 'any_uf',
  loadCapacity: 'any_load_capacity',
  cmt: 'any_cmt',
  pbt: 'any_pbt',
  color: 'any_color',
  chassisBrandType: 'any_chassis_brand_type',
  category: 'any_category',
  fuel: 'any_fuel',
  cylinder: 'any_cylinder',
  modelCode: 'any_model_code',
  model: 'any_model',
  provenance: 'any_provenance',
  brandModel: 'any_brand_model',
  loadPassengers: 5,
  lastUpdateDate: new Date(),
  inclusionRestrictionDate: new Date(),
  restrictions: {
    winchBlockade: {
      description: 'description_winch_blockade',
      name: 'name_winch_blockade',
      value: 2132,
    },
    restrictionsTheft: {
      description: 'description_restrictions_theft',
      name: 'name_restrictions_theft',
      value: 2132,
    },
    restrictionsEnvironmental: {
      description: 'description_restrictions_environmental',
      name: 'name_restrictions_environmental',
      value: 2132,
    },
    restrictionsJudicial: {
      description: 'description_restrictions_judicial',
      name: 'name_restrictions_judicial',
      value: 2132,
    },
    restrictionsRenajud: {
      description: 'description_restrictions_renajud',
      name: 'name_restrictions_renajud',
      value: 2132,
    },
    restrictionsTaxation: {
      description: 'description_restrictions_taxation',
      name: 'name_restrictions_taxation',
      value: 2132,
    },
    restrictions: {
      description: 'description_restrictions',
      name: 'name_restrictions',
      value: 2132,
    },
    restrictionsFinancial: {
      description: 'description_restrictions_financial',
      name: 'name_restrictions_financial',
      value: 2132,
    },
    debtDpvat: {
      description: 'description_debt_dpvat',
      name: 'name_debt_dpvat',
      value: 2132,
    },
    debtIpva: {
      description: 'description_debt_ipva',
      name: 'name_debt_ipva',
      value: 2132,
    },
    debtLicensing: {
      description: 'description_debt_licensing',
      name: 'name_debt_licensing',
      value: 2132,
    },
    debtTheft: {
      description: 'description_debt_theft',
      name: 'name_debt_theft',
      value: 2132,
    },
    restrictionsFinan: {
      description: 'description_restrictions_finan',
      name: 'name_restrictions_finan',
      value: 2132,
    },
    restrictionsArrenadatario: {
      description: 'description_restrictions_arrenadatario',
      name: 'name_restrictions_arrenadatario',
      value: 2132,
    },
    restrictionsAgentName: {
      description: 'description_restrictions_agent_name',
      name: 'name_restrictions_agent_name',
      value: 2132,
    },
    othersRestrictions1: {
      description: 'description_others_restrictions1',
      name: 'name_others_restrictions1',
      value: 2132,
    },
    othersRestrictions2: {
      description: 'description_others_restrictions2',
      name: 'name_others_restrictions2',
      value: 2132,
    },
    othersRestrictions3: {
      description: 'description_others_restrictions3',
      name: 'name_others_restrictions3',
      value: 2132,
    },
    othersRestrictions4: {
      description: 'description_others_restrictions4',
      name: 'name_others_restrictions4',
      value: 2132,
    },
    administavive: {
      description: 'description_administavive',
      name: 'name_administavive',
      value: 2132,
    },
    cpfCnpjArrenadatar: {
      description: 'description_cpf_cnpj_arrenadatar',
      name: 'name_cpf_cnpj_arrenadatar',
      value: 2132,
    },
    debtDersa: {
      description: 'description_debt_dersa',
      name: 'name_debt_dersa',
      value: 2132,
    },
    debtDer: {
      description: 'description_debt_der',
      name: 'name_debt_der',
      value: 2132,
    },
    debtDetran: {
      description: 'description_debt_detran',
      name: 'name_debt_detran',
      value: 2132,
    },
    debtCetesb: {
      description: 'description_debt_cetesb',
      name: 'name_debt_cetesb',
      value: 2132,
    },
    debtRenainf: {
      description: 'description_debt_renainf',
      name: 'name_debt_renainf',
      value: 2132,
    },
    debtPolrodfed: {
      description: 'description_debt_polrodfed',
      name: 'name_debt_polrodfed',
      value: 2132,
    },
    intentionRestrictionFinan: {
      description: 'description_intention_restriction_finan',
      name: 'name_intention_restriction_finan',
      value: 2132,
    },
    intentionAgentName: {
      description: 'description_intention_agent_name',
      name: 'name_intention_agent_name',
      value: 2132,
    },
    intentionFinancName: {
      description: 'description_intention_financ_name',
      name: 'name_intention_financ_name',
      value: 2132,
    },
    intentionInclusionDate: {
      description: 'description_intention_inclusion_date',
      name: 'name_intention_inclusion_date',
      value: 2132,
    },
    financialInclusionDate: {
      description: 'description_financial_inclusion_date',
      name: 'name_financial_inclusion_date',
      value: 2132,
    },
    salesCommunication: {
      description: 'description_sales_communication',
      name: 'name_sales_communication',
      value: 2132,
    },
    communicationInclusion: {
      description: 'description_communication_inclusion',
      name: 'name_communication_inclusion',
      value: 2132,
    },
    financialContract: {
      description: 'description_financial_contract',
      name: 'name_financial_contract',
      value: 2132,
    },
    financialCodeAgent: {
      description: 'description_financial_code_agent',
      name: 'name_financial_code_agent',
      value: 2132,
    },
    financialContractDate: {
      description: 'description_financial_contract_date',
      name: 'name_financial_contract_date',
      value: 2132,
    },
    financialCode: {
      description: 'description_financial_code',
      name: 'name_financial_code',
      value: 2132,
    },
    dateSaleCommunication: {
      description: 'description_date_sale_communication',
      name: 'name_date_sale_communication',
      value: 2132,
    },
    documentBuyer: {
      description: 'description_document_buyer',
      name: 'name_document_buyer',
      value: 2132,
    },
    salesCommunicationNf: {
      description: 'description_sales_communication_nf',
      name: 'name_sales_communication_nf',
      value: 2132,
    },
    nameBuyer: {
      description: 'description_name_buyer',
      name: 'name_name_buyer',
      value: 2132,
    },
    detranProtocol: {
      description: 'description_detran_protocol',
      name: 'name_detran_protocol',
      value: 2132,
    },
    typeBuyer: {
      description: 'description_type_buyer',
      name: 'name_type_buyer',
      value: 2132,
    },
    gravameDate: {
      description: 'description_gravame_date',
      name: 'name_gravame_date',
      value: 2132,
    },
    gravameDocumentFinanced: {
      description: 'description_gravame_document_financed',
      name: 'name_gravame_document_financed',
      value: 2132,
    },
    gravameAgentName: {
      description: 'description_gravame_agent_name',
      name: 'name_gravame_agent_name',
      value: 2132,
    },
    financialContractName: {
      description: 'description_financial_contract_name',
      name: 'name_financial_contract_name',
      value: 2132,
    },
    gravameContactNumber: {
      description: 'description_gravame_contact_number',
      name: 'name_gravame_contact_number',
      value: 2132,
    },
    financedName: {
      description: 'description_financed_name',
      name: 'name_financed_name',
      value: 2132,
    },
    municipalDebt: {
      description: 'description_municipal_debt',
      name: 'name_municipal_debt',
      value: 2132,
    },
    debtFed: {
      description: 'description_debt_fed',
      name: 'name_debt_fed',
      value: 2132,
    },
    licensingIpva: {
      description: 'description_licensing_ipva',
      name: 'name_licensing_ipva',
      value: 2132,
    },
    licensingDate: {
      description: 'description_licensing_date',
      name: 'name_licensing_date',
      value: 2132,
    },
  },
});

describe(StateBaseParser.name, () => {
  test('should return null if input is null or undefined', () => {
    const result: Partial<QueryNationalBaseVo> = StateBaseParser.parse(null);
    expect(result).toBe(null);

    const result2: Partial<QueryNationalBaseVo> = StateBaseParser.parse(undefined);
    expect(result2).toBe(null);
  });

  test('should parse input to QueryNationalBaseVo', () => {
    const stateBase: StateBaseVo = mockStateBaseVo();

    const result: Partial<QueryNationalBaseVo> = StateBaseParser.parse(stateBase);

    expect(result).toStrictEqual({
      categoria: stateBase?.category,
      chassi: stateBase?.chassis,
      combustivel: stateBase?.fuel,
      cor: stateBase?.color,
      uf: stateBase?.uf,
      renavam: stateBase?.renavam,
      motor: stateBase?.engineNumber,
      placa: stateBase?.plate,
      especie: stateBase?.vehicleSpecie,
      pronome: stateBase?.ownerName,
      pronomeAnterior: stateBase?.previousOwnerName,
      tipo: stateBase?.vehicleType,
      municipio: stateBase?.city,
      licdata: stateBase?.licdata?.toLocaleString(),
      comunicacaoInclusao: stateBase?.restrictions?.salesCommunication?.description,
      dataEmissaoCrv: stateBase?.transmissionCRVDate?.toLocaleString(),
      situacaoVeiculo: stateBase?.vehicleSituation,
      observacoes: stateBase?.comments,
      tipoMarcacaoChassi: stateBase?.chassisBrandType,
      comunicacaoVenda: stateBase?.restrictions?.communicationInclusion?.description,
      dataInclusaoIntencaoTrocaFinanceira: stateBase?.restrictions?.financialInclusionDate?.description,
      dataLimiteRestricaoTributaria: stateBase?.taxRestrictionLimitDate?.toLocaleString(),
      dataVenda: null,
      dataVigenciaContratoFinanceira: stateBase?.dateValidityFinancialContract?.toLocaleString(),
      debitoCetesb: stateBase?.restrictions?.debtCetesb?.value?.toString(),
      debitoDer: stateBase?.restrictions?.debtDer?.value?.toString(),
      debitoDersa: stateBase?.restrictions?.debtDersa?.value?.toString(),
      debitoDetran: stateBase?.restrictions?.debtDetran?.value?.toString(),
      debitoDpvat: stateBase?.restrictions?.debtDpvat?.value?.toString(),
      debitoIpva: stateBase?.restrictions?.debtIpva?.value?.toString(),
      debitoLicenciamento: stateBase?.restrictions?.debtLicensing?.value?.toString(),
      debitoMultas: stateBase?.restrictions?.debtTheft?.value?.toString(),
      debitoMunicipais: stateBase?.restrictions?.municipalDebt?.value?.toString(),
      debitoPoliciaRodoviariaFederal: stateBase?.restrictions?.debtPolrodfed?.value?.toString(),
      debitoRenainf: stateBase?.restrictions?.debtRenainf?.value?.toString(),
      exercicioLicenciamento: stateBase?.licensingExercise,
      existeDebitoDpvat: stateBase?.restrictions?.debtDpvat?.description,
      existeDebitoIpva: stateBase?.restrictions?.debtIpva?.description,
      existeDebitoLicenciamento: stateBase?.restrictions?.debtLicensing?.description,
      existeDebitoMulta: stateBase?.restrictions?.debtTheft?.description,
      intencaoDataInslusao: stateBase?.restrictions?.intentionInclusionDate?.description,
      intencaoDocFinanceira: stateBase?.intentionDocFinance,
      intencaoNomeFinanceira: stateBase?.restrictions?.intentionFinancName?.description,
      intencaoRestricaoFinanceira: stateBase?.restrictions?.intentionRestrictionFinan?.description,
      outrasRestricoes1: stateBase?.restrictions?.othersRestrictions1?.description,
      outrasRestricoes2: stateBase?.restrictions?.othersRestrictions2?.description,
      outrasRestricoes3: stateBase?.restrictions?.othersRestrictions3?.description,
      outrasRestricoes4: stateBase?.restrictions?.othersRestrictions4?.description,
      restricaoAdminisrativa: stateBase?.restrictions?.administavive?.description,
      restricaoAmbiental: stateBase?.restrictions?.restrictionsEnvironmental?.description,
      restricaoArrendatario: stateBase?.restrictions?.restrictionsArrenadatario?.description,
      restricaoDataInclusao: stateBase?.inclusionRestrictionDate?.toLocaleString(),
      restricaoDocArrendatario: stateBase?.restrictions?.cpfCnpjArrenadatar?.description,
      restricaoFinanceira: null,
      restricaoGuincho: stateBase?.restrictions?.winchBlockade?.description,
      restricaoJudicial: stateBase?.restrictions?.restrictionsJudicial?.description,
      restricaoNomeAgente: stateBase?.restrictions?.intentionAgentName?.description,
      restricaoRenajud: stateBase?.restrictions?.restrictionsRenajud?.description,
      restricaoRouboFurto: stateBase?.restrictions?.restrictionsTheft?.description,
      restricaoTributaria: stateBase?.restrictions?.restrictionsTaxation?.description,
    });
  });

  test('should parse input for restrictions null', () => {
    const stateBase: StateBaseVo = { ...mockStateBaseVo(), restrictions: null };

    const result: Partial<QueryNationalBaseVo> = StateBaseParser.parse(stateBase);

    expect(result).toStrictEqual({
      categoria: stateBase?.category,
      chassi: stateBase?.chassis,
      combustivel: stateBase?.fuel,
      cor: stateBase?.color,
      uf: stateBase?.uf,
      renavam: stateBase?.renavam,
      motor: stateBase?.engineNumber,
      placa: stateBase?.plate,
      especie: stateBase?.vehicleSpecie,
      pronome: stateBase?.ownerName,
      pronomeAnterior: stateBase?.previousOwnerName,
      tipo: stateBase?.vehicleType,
      municipio: stateBase?.city,
      licdata: stateBase?.licdata?.toLocaleString(),
      comunicacaoInclusao: undefined,
      dataEmissaoCrv: stateBase?.transmissionCRVDate?.toLocaleString(),
      situacaoVeiculo: stateBase?.vehicleSituation,
      observacoes: stateBase?.comments,
      tipoMarcacaoChassi: stateBase?.chassisBrandType,
      comunicacaoVenda: undefined,
      dataInclusaoIntencaoTrocaFinanceira: undefined,
      dataLimiteRestricaoTributaria: stateBase?.taxRestrictionLimitDate?.toLocaleString(),
      dataVenda: null,
      dataVigenciaContratoFinanceira: stateBase?.dateValidityFinancialContract?.toLocaleString(),
      debitoCetesb: undefined,
      debitoDer: undefined,
      debitoDersa: undefined,
      debitoDetran: undefined,
      debitoDpvat: undefined,
      debitoIpva: undefined,
      debitoLicenciamento: undefined,
      debitoMultas: undefined,
      debitoMunicipais: undefined,
      debitoPoliciaRodoviariaFederal: undefined,
      debitoRenainf: undefined,
      exercicioLicenciamento: stateBase?.licensingExercise,
      existeDebitoDpvat: undefined,
      existeDebitoIpva: undefined,
      existeDebitoLicenciamento: undefined,
      existeDebitoMulta: undefined,
      intencaoDataInslusao: undefined,
      intencaoDocFinanceira: stateBase?.intentionDocFinance,
      intencaoNomeFinanceira: undefined,
      intencaoRestricaoFinanceira: undefined,
      outrasRestricoes1: undefined,
      outrasRestricoes2: undefined,
      outrasRestricoes3: undefined,
      outrasRestricoes4: undefined,
      restricaoAdminisrativa: undefined,
      restricaoAmbiental: undefined,
      restricaoArrendatario: undefined,
      restricaoDataInclusao: stateBase?.inclusionRestrictionDate?.toLocaleString(),
      restricaoDocArrendatario: undefined,
      restricaoFinanceira: null, // Not used
      restricaoGuincho: undefined,
      restricaoJudicial: undefined,
      restricaoNomeAgente: undefined,
      restricaoRenajud: undefined,
      restricaoRouboFurto: undefined,
      restricaoTributaria: undefined,
    });
  });

  test('should parse input for restrictions null 2', () => {
    const stateBase: StateBaseVo = {
      ...mockStateBaseVo(),
      restrictions: {
        ...mockStateBaseVo().restrictions,
        winchBlockade: null,
        restrictionsTheft: null,
        restrictionsEnvironmental: null,
        restrictionsJudicial: null,
        restrictionsRenajud: null,
        restrictionsTaxation: null,
        restrictions: null,
        restrictionsFinancial: null,
        debtDpvat: null,
        debtIpva: null,
        debtLicensing: null,
        debtTheft: null,
        restrictionsFinan: null,
        restrictionsArrenadatario: null,
        restrictionsAgentName: null,
        othersRestrictions1: null,
        othersRestrictions2: null,
        othersRestrictions3: null,
        othersRestrictions4: null,
        administavive: null,
        cpfCnpjArrenadatar: null,
        debtDersa: null,
        debtDer: null,
        debtDetran: null,
        debtCetesb: null,
        debtRenainf: null,
        debtPolrodfed: null,
        intentionRestrictionFinan: null,
        intentionAgentName: null,
        intentionFinancName: null,
        intentionInclusionDate: null,
        financialInclusionDate: null,
        salesCommunication: null,
        communicationInclusion: null,
        financialContract: null,
        financialCodeAgent: null,
        financialContractDate: null,
        financialCode: null,
        dateSaleCommunication: null,
        documentBuyer: null,
        salesCommunicationNf: null,
        nameBuyer: null,
        detranProtocol: null,
        typeBuyer: null,
        gravameDate: null,
        gravameDocumentFinanced: null,
        gravameAgentName: null,
        financialContractName: null,
        gravameContactNumber: null,
        financedName: null,
        municipalDebt: null,
        debtFed: null,
        licensingIpva: null,
        licensingDate: null,
      },
    };

    const result: Partial<QueryNationalBaseVo> = StateBaseParser.parse(stateBase);

    expect(result).toStrictEqual({
      categoria: stateBase?.category,
      chassi: stateBase?.chassis,
      combustivel: stateBase?.fuel,
      cor: stateBase?.color,
      uf: stateBase?.uf,
      renavam: stateBase?.renavam,
      motor: stateBase?.engineNumber,
      placa: stateBase?.plate,
      especie: stateBase?.vehicleSpecie,
      pronome: stateBase?.ownerName,
      pronomeAnterior: stateBase?.previousOwnerName,
      tipo: stateBase?.vehicleType,
      municipio: stateBase?.city,
      licdata: stateBase?.licdata?.toLocaleString(),
      comunicacaoInclusao: undefined,
      dataEmissaoCrv: stateBase?.transmissionCRVDate?.toLocaleString(),
      situacaoVeiculo: stateBase?.vehicleSituation,
      observacoes: stateBase?.comments,
      tipoMarcacaoChassi: stateBase?.chassisBrandType,
      comunicacaoVenda: undefined,
      dataInclusaoIntencaoTrocaFinanceira: undefined,
      dataLimiteRestricaoTributaria: stateBase?.taxRestrictionLimitDate?.toLocaleString(),
      dataVenda: null,
      dataVigenciaContratoFinanceira: stateBase?.dateValidityFinancialContract?.toLocaleString(),
      debitoCetesb: undefined,
      debitoDer: undefined,
      debitoDersa: undefined,
      debitoDetran: undefined,
      debitoDpvat: undefined,
      debitoIpva: undefined,
      debitoLicenciamento: undefined,
      debitoMultas: undefined,
      debitoMunicipais: undefined,
      debitoPoliciaRodoviariaFederal: undefined,
      debitoRenainf: undefined,
      exercicioLicenciamento: stateBase?.licensingExercise,
      existeDebitoDpvat: undefined,
      existeDebitoIpva: undefined,
      existeDebitoLicenciamento: undefined,
      existeDebitoMulta: undefined,
      intencaoDataInslusao: undefined,
      intencaoDocFinanceira: stateBase?.intentionDocFinance,
      intencaoNomeFinanceira: undefined,
      intencaoRestricaoFinanceira: undefined,
      outrasRestricoes1: undefined,
      outrasRestricoes2: undefined,
      outrasRestricoes3: undefined,
      outrasRestricoes4: undefined,
      restricaoAdminisrativa: undefined,
      restricaoAmbiental: undefined,
      restricaoArrendatario: undefined,
      restricaoDataInclusao: stateBase?.inclusionRestrictionDate?.toLocaleString(),
      restricaoDocArrendatario: undefined,
      restricaoFinanceira: null, // Not used
      restricaoGuincho: undefined,
      restricaoJudicial: undefined,
      restricaoNomeAgente: undefined,
      restricaoRenajud: undefined,
      restricaoRouboFurto: undefined,
      restricaoTributaria: undefined,
    });
  });
});
