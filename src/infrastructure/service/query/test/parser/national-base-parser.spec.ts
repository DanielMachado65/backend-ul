import { NationalBaseVo } from 'src/domain/value-object/national-base.vo';
import { QueryNationalBaseVo } from 'src/domain/value-object/query/query-national-base.vo';
import { NationalBaseParser } from 'src/infrastructure/service/query/parser/national-base-parser';

const mockNationalBaseVo = (): NationalBaseVo => ({
  plate: 'any_plate',
  chassis: 'any_chassis',
  renavam: 'any_renavam',
  engineNumber: 'any_engine_number',
  transmissionNumber: 'any_transmission_number',
  bodyNumber: 'any_body_number',
  bodyType: 'any_body_type',
  rearAxisNumber: 'any_rear_axis_number',
  thireAxisNumber: 'any_thire_axis_number',
  axis: 'any_axis',
  enginePower: 'any_engine_power',
  modelYear: 2022,
  manufactureYear: 2021,
  vehicleSpecie: 'any_vehicle_specie',
  vehicleType: 'any_vehicle_type',
  vehicleSituation: 'any_vehicle_situation',
  city: 'any_city',
  uf: 'any_uf',
  ufBilled: 'any_uf_billed',
  billedDocType: 'any_billed_doc_type',
  importDocType: 'any_import_doc_type',
  di: 'any_di',
  loadCapacity: 'any_load_capacity',
  cmt: 'any_cmt',
  pbt: 'any_pbt',
  docBilled: 'any_doc_billed',
  color: 'any_color',
  species: 'any_species',
  chassisBrandType: 'any_chassis_brand_type',
  category: 'any_category',
  fuel: 'any_fuel',
  ownerDoc: 'any_owner_doc',
  cylinder: 'any_cylinder',
  modelCode: 'any_model_code',
  brand: 'any_brand',
  model: 'any_model',
  provenance: 'any_provenance',
  brandModel: 'any_brand_model',
  licensePlateDate: new Date(),
  mountingType: 'any_mounting_type',
  loadPassengers: 5,
  lastUpdateDate: new Date(),
  inclusionRestrictionDate: new Date(),
  dateOfTheLicense: new Date(),
  taxRestrictionDate: new Date(),
  restrictions: {
    restriction1: {
      description: 'description_restriction1',
      name: 'name_restriction1',
      value: 123,
    },
    restriction2: {
      description: 'description_restriction2',
      name: 'name_restriction2',
      value: 123,
    },
    restriction3: {
      description: 'description_restriction3',
      name: 'name_restriction3',
      value: 123,
    },
    restriction4: {
      description: 'description_restriction4',
      name: 'name_restriction4',
      value: 123,
    },
    othersRestrictions1: {
      description: 'description_others_restrictions1',
      name: 'name_others_restrictions1',
      value: 123,
    },
    othersRestrictions2: {
      description: 'description_others_restrictions2',
      name: 'name_others_restrictions2',
      value: 123,
    },
    othersRestrictions3: {
      description: 'description_others_restrictions3',
      name: 'name_others_restrictions3',
      value: 123,
    },
    othersRestrictions4: {
      description: 'description_others_restrictions4',
      name: 'name_others_restrictions4',
      value: 123,
    },
    othersRestrictions5: {
      description: 'description_others_restrictions5',
      name: 'name_others_restrictions5',
      value: 123,
    },
    othersRestrictions6: {
      description: 'description_others_restrictions6',
      name: 'name_others_restrictions6',
      value: 123,
    },
    othersRestrictions7: {
      description: 'description_others_restrictions7',
      name: 'name_others_restrictions7',
      value: 123,
    },
    othersRestrictions8: {
      description: 'description_others_restrictions8',
      name: 'name_others_restrictions8',
      value: 123,
    },
    occurrenceTheft: {
      description: 'description_occurrence_theft',
      name: 'name_occurrence_theft',
      value: 123,
    },
    importation: {
      description: 'description_importation',
      name: 'name_importation',
      value: 123,
    },
    salesCommunication: {
      description: 'description_sales_communication',
      name: 'name_sales_communication',
      value: 123,
    },
    restrictionsRenajud: {
      description: 'description_restrictions_renajud',
      name: 'name_restrictions_renajud',
      value: 123,
    },
    restrictionsFinan: {
      description: 'description_restrictions_finan',
      name: 'name_restrictions_finan',
      value: 123,
    },
    restrictionsAgentName: {
      description: 'description_restrictions_agent_name',
      name: 'name_restrictions_agent_name',
      value: 123,
    },
    restrictionsFinanced: {
      description: 'description_restrictions_financed',
      name: 'name_restrictions_financed',
      value: 123,
    },
    cpfCnpjFinanced: {
      description: 'description_cpf_cnpj_financed',
      name: 'name_cpf_cnpj_financed',
      value: 123,
    },
    occurrence: {
      description: 'description_occurrence',
      name: 'name_occurrence',
      value: 123,
    },
    restrictions: {
      description: 'description_restrictions',
      name: 'name_restrictions',
      value: 123,
    },
    restrictionsJudicial: {
      description: 'description_restrictions_judicial',
      name: 'name_restrictions_judicial',
      value: 123,
    },
  },
});

describe(NationalBaseParser.name, () => {
  test('should return null if input is null or undefined', () => {
    const result: Partial<QueryNationalBaseVo> = NationalBaseParser.parse(null);
    expect(result).toBe(null);

    const result2: Partial<QueryNationalBaseVo> = NationalBaseParser.parse(undefined);
    expect(result2).toBe(null);
  });

  test('should parse input to QueryNationalBaseVo', () => {
    const nationalBase: NationalBaseVo = mockNationalBaseVo();

    const result: Partial<QueryNationalBaseVo> = NationalBaseParser.parse(nationalBase);

    expect(result).toStrictEqual({
      placa: nationalBase?.plate,
      anoFabricacao: nationalBase?.manufactureYear?.toString(),
      anoModelo: nationalBase?.modelYear?.toString(),
      categoria: nationalBase?.category,
      chassi: nationalBase?.chassis,
      combustivel: nationalBase?.fuel,
      cor: nationalBase?.color,
      di: nationalBase?.di,
      docFaturado: nationalBase?.docBilled,
      docProprietario: nationalBase?.ownerDoc,
      dtEmissaoCrv: null,
      dtUltimaAtualizacao: nationalBase?.lastUpdateDate?.toLocaleString(),
      especie: nationalBase?.species,
      especieVeiculo: nationalBase?.vehicleSpecie,
      indicadorComunicacaoVendas: nationalBase?.restrictions?.salesCommunication?.description,
      indicadorRestricaoRenajud: nationalBase?.restrictions?.restrictionsRenajud?.description,
      motor: nationalBase?.engineNumber,
      municipio: nationalBase?.city,
      ocorrencia: nationalBase?.restrictions?.occurrence?.description,
      outrasRestricoes1: nationalBase?.restrictions?.othersRestrictions1?.description,
      outrasRestricoes2: nationalBase?.restrictions?.othersRestrictions2?.description,
      outrasRestricoes3: nationalBase?.restrictions?.othersRestrictions3?.description,
      outrasRestricoes4: nationalBase?.restrictions?.othersRestrictions4?.description,
      outrasRestricoes5: nationalBase?.restrictions?.othersRestrictions5?.description,
      outrasRestricoes6: nationalBase?.restrictions?.othersRestrictions6?.description,
      outrasRestricoes7: nationalBase?.restrictions?.othersRestrictions7?.description,
      outrasRestricoes8: nationalBase?.restrictions?.othersRestrictions8?.description,
      renavam: nationalBase?.renavam,
      restricao1: nationalBase?.restrictions?.restriction1?.description,
      restricao2: nationalBase?.restrictions?.restriction2?.description,
      restricao3: nationalBase?.restrictions?.restriction3?.description,
      restricao4: nationalBase?.restrictions?.restriction4?.description,
      restricaoDataInclusao: nationalBase?.inclusionRestrictionDate?.toLocaleString(),
      restricaoFinanciadora: nationalBase?.restrictions?.restrictionsFinan?.description,
      restricaoFinanciamento: nationalBase?.restrictions?.restrictionsFinanced?.description,
      restricaoNomeAgente: nationalBase?.restrictions?.restrictionsAgentName?.description,
      restricaoTipoTransacao: nationalBase?.restrictions?.importation?.description,
      situacaoVeiculo: nationalBase?.vehicleSituation,
      tipoDocFaturado: nationalBase?.billedDocType,
      tipoDocImportadora: nationalBase?.importDocType,
      tipoMarcacaoChassi: nationalBase?.chassisBrandType,
      tipoVeiculo: nationalBase?.vehicleType,
      uf: nationalBase?.uf,
      ufFaturado: nationalBase?.ufBilled,
      procedencia: nationalBase?.provenance,
    });
  });

  test('should parse input for restrictions null 2', () => {
    const nationalBase: NationalBaseVo = {
      ...mockNationalBaseVo(),
      restrictions: {
        ...mockNationalBaseVo().restrictions,
        salesCommunication: null,
        restrictionsRenajud: null,
        occurrence: null,
        othersRestrictions1: null,
        othersRestrictions2: null,
        othersRestrictions3: null,
        othersRestrictions4: null,
        othersRestrictions5: null,
        othersRestrictions6: null,
        othersRestrictions7: null,
        othersRestrictions8: null,
        restriction1: null,
        restriction2: null,
        restriction3: null,
        restriction4: null,
        restrictionsFinan: null,
        restrictionsFinanced: null,
        restrictionsAgentName: null,
        importation: null,
      },
    };

    const result: Partial<QueryNationalBaseVo> = NationalBaseParser.parse(nationalBase);

    expect(result).toStrictEqual({
      placa: nationalBase?.plate,
      anoFabricacao: nationalBase?.manufactureYear?.toString(),
      anoModelo: nationalBase?.modelYear?.toString(),
      categoria: nationalBase?.category,
      chassi: nationalBase?.chassis,
      combustivel: nationalBase?.fuel,
      cor: nationalBase?.color,
      di: nationalBase?.di,
      docFaturado: nationalBase?.docBilled,
      docProprietario: nationalBase?.ownerDoc,
      dtEmissaoCrv: null,
      dtUltimaAtualizacao: nationalBase?.lastUpdateDate?.toLocaleString(),
      especie: nationalBase?.species,
      especieVeiculo: nationalBase?.vehicleSpecie,
      indicadorComunicacaoVendas: undefined,
      indicadorRestricaoRenajud: undefined,
      motor: nationalBase?.engineNumber,
      municipio: nationalBase?.city,
      ocorrencia: undefined,
      outrasRestricoes1: undefined,
      outrasRestricoes2: undefined,
      outrasRestricoes3: undefined,
      outrasRestricoes4: undefined,
      outrasRestricoes5: undefined,
      outrasRestricoes6: undefined,
      outrasRestricoes7: undefined,
      outrasRestricoes8: undefined,
      renavam: nationalBase?.renavam,
      restricao1: undefined,
      restricao2: undefined,
      restricao3: undefined,
      restricao4: undefined,
      restricaoDataInclusao: nationalBase?.inclusionRestrictionDate?.toLocaleString(),
      restricaoFinanciadora: undefined,
      restricaoFinanciamento: undefined,
      restricaoNomeAgente: undefined,
      restricaoTipoTransacao: undefined,
      situacaoVeiculo: nationalBase?.vehicleSituation,
      tipoDocFaturado: nationalBase?.billedDocType,
      tipoDocImportadora: nationalBase?.importDocType,
      tipoMarcacaoChassi: nationalBase?.chassisBrandType,
      tipoVeiculo: nationalBase?.vehicleType,
      uf: nationalBase?.uf,
      ufFaturado: nationalBase?.ufBilled,
      procedencia: nationalBase?.provenance,
    });
  });
  test('should parse input for restrictions null', () => {
    const nationalBase: NationalBaseVo = { ...mockNationalBaseVo(), restrictions: null };

    const result: Partial<QueryNationalBaseVo> = NationalBaseParser.parse(nationalBase);

    expect(result).toStrictEqual({
      placa: nationalBase?.plate,
      anoFabricacao: nationalBase?.manufactureYear?.toString(),
      anoModelo: nationalBase?.modelYear?.toString(),
      categoria: nationalBase?.category,
      chassi: nationalBase?.chassis,
      combustivel: nationalBase?.fuel,
      cor: nationalBase?.color,
      di: nationalBase?.di,
      docFaturado: nationalBase?.docBilled,
      docProprietario: nationalBase?.ownerDoc,
      dtEmissaoCrv: null,
      dtUltimaAtualizacao: nationalBase?.lastUpdateDate?.toLocaleString(),
      especie: nationalBase?.species,
      especieVeiculo: nationalBase?.vehicleSpecie,
      indicadorComunicacaoVendas: undefined,
      indicadorRestricaoRenajud: undefined,
      motor: nationalBase?.engineNumber,
      municipio: nationalBase?.city,
      ocorrencia: undefined,
      outrasRestricoes1: undefined,
      outrasRestricoes2: undefined,
      outrasRestricoes3: undefined,
      outrasRestricoes4: undefined,
      outrasRestricoes5: undefined,
      outrasRestricoes6: undefined,
      outrasRestricoes7: undefined,
      outrasRestricoes8: undefined,
      renavam: nationalBase?.renavam,
      restricao1: undefined,
      restricao2: undefined,
      restricao3: undefined,
      restricao4: undefined,
      restricaoDataInclusao: nationalBase?.inclusionRestrictionDate?.toLocaleString(),
      restricaoFinanciadora: undefined,
      restricaoFinanciamento: undefined,
      restricaoNomeAgente: undefined,
      restricaoTipoTransacao: undefined,
      situacaoVeiculo: nationalBase?.vehicleSituation,
      tipoDocFaturado: nationalBase?.billedDocType,
      tipoDocImportadora: nationalBase?.importDocType,
      tipoMarcacaoChassi: nationalBase?.chassisBrandType,
      tipoVeiculo: nationalBase?.vehicleType,
      uf: nationalBase?.uf,
      ufFaturado: nationalBase?.ufBilled,
      procedencia: nationalBase?.provenance,
    });
  });
});
